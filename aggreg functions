#Aggregation Questions

#Find the total amount of poster_qty paper ordered in the orders table.
#Find the total amount of standard_qty paper ordered in the orders table.
#Find the total dollar amount of sales using the total_amt_usd in the orders table.
# Find the total amount spent on standard_amt_usd and gloss_amt_usd paper for each order in the orders table. 
# Find the standard_amt_usd per unit of standard_qty paper. 

SELECT SUM(poster_qty) as poster,
SUM(standard_qty) as standard,
SUM(total_amt_usd) as total_amount,
SUM(standard_amt_usd +gloss_amt_usd) as total_std_gloss,  
SUM(standard_amt_usd) / SUM(standard_qty) as unit_standard_price
FROM orders

#When was the earliest order ever placed? You only need to return the date.
# When did the most recent (latest) web_event occur?
SELECT MIN(occurred_at), MAX(occurred_at)
FROM orders

#Try performing the same query as in question above without using an aggregation function. 
SELECT occurred_at
FROM orders
ORDER BY occurred_at DESC
LIMIT 1

# Find the mean (AVERAGE) amount spent per order on each paper type, as well as the mean amount of each paper type purchased per order. 
SELECT AVG(standard_qty) as standard_mean, 
AVG(gloss_qty) as gloss_mean,
AVG(poster_qty) as poster_mean,
AVG(standard_amt_usd) as standard_amt_mean,
AVG(gloss_amt_usd) as gloss_amt_mean,
AVG(poster_amt_usd) as poster_amt_mean
FROM orders


#  what is the MEDIAN total_usd spent on all orders? 
SELECT
FROM (SELECT total_amt_usd
      FROM orders
      ORDER BY total_amt_usd
      LIMIT 3457) AS Table1
ORDER BY total_amt_usd DESC
LIMIT 2;


# Which account (by name) placed the earliest order? Your solution should have the account name and the date of the order.
SELECT a.name, o.occurred_at
FROM accounts a
JOIN orders o
ON a.id = o.account_id
ORDER BY o.occurred_at
LIMIT 1


# Find the total sales in usd for each account. You should include two columns - the total sales for each company's orders 
# in usd and the company name.

SELECT SUM(o.total_amt_usd) AS total_sales, a.name AS nome
FROM accounts a
JOIN orders o
ON a.id = o.account_id
GROUP BY nome
ORDER BY nome


# Via what channel did the most recent (latest) web_event occur, which account was associated with this web_event? 
# Your query should return only three values - the date, channel, and account name.

SELECT w.occurred_at AS data, w.channel AS canal, a.name AS nome
FROM accounts a
JOIN web_events w
ON a.id = w.account_id
ORDER BY data DESC
LIMIT 1

# Find the total number of times each type of channel from the web_events was used. 
# Your final table should have two columns - the channel and the number of times the channel was used.
SELECT channel, COUNT(channel) 
FROM web_events
GROUP BY channel

# Who was the primary contact associated with the earliest web_event? 
SELECT w.occurred_at AS data, a.primary_poc AS nome
FROM accounts a
JOIN web_events w
ON a.id = w.account_id
ORDER BY data
LIMIT 1

# What was the smallest order placed by each account in terms of total usd. 
# Provide only two columns - the account name and the total usd. Order from smallest dollar amounts to largest.



# Find the number of sales reps in each region. Your final table should have two columns - the region and the number of sales_reps. 
# Order from fewest reps to most reps.

