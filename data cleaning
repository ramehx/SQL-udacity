## LEFT / RIGHT

# In the accounts table, there is a column holding the website for each company. The last three digits specify what type of web address
# they are using. A list of extensions (and pricing) is provided here. Pull these extensions and provide how many of each website type 
# exist in the accounts table.
SELECT RIGHT(website, 3) AS sufix, COUNT(RIGHT(website, 3)) AS qtde
FROM accounts
GROUP BY sufix  

# Use the accounts table to pull the first letter of each company name to see the distribution of company names that begin with each letter (or number). 

SELECT LEFT(name, 1) AS letra, COUNT (LEFT(name, 1)) AS qtde
FROM accounts
GROUP BY letra
ORDER BY qtde DESC


# Use the accounts table and a CASE statement to create two groups: one group of company names that start with a number and a second group
# of those company names that start with a letter. What proportion of company names start with a letter?
SELECT SUM(num) nums, SUM(letter) letters
FROM (SELECT name, CASE WHEN LEFT(UPPER(name), 1) IN ('0','1','2','3','4','5','6','7','8','9') 
                       THEN 1 ELSE 0 END AS num, 
         CASE WHEN LEFT(UPPER(name), 1) IN ('0','1','2','3','4','5','6','7','8','9') 
                       THEN 0 ELSE 1 END AS letter
      FROM accounts) t1;


# Consider vowels as a, e, i, o, and u. What proportion of company names start with a vowel, and what percent start with anything else?
SELECT SUM(vowels) vowels, SUM(other) other
FROM (SELECT name, CASE WHEN LEFT(UPPER(name), 1) IN ('A','E','I','O','U') 
                        THEN 1 ELSE 0 END AS vowels, 
          CASE WHEN LEFT(UPPER(name), 1) IN ('A','E','I','O','U') 
                       THEN 0 ELSE 1 END AS other
         FROM accounts) t1;


##POSITION AND STRPOS

# Use the accounts table to create first and last name columns that hold the first and last names for the primary_poc. 
SELECT LEFT(primary_poc, STRPOS(primary_poc, ' ') -1 ) AS nome, 
RIGHT(primary_poc, LENGTH(primary_poc) - STRPOS(primary_poc, ' ')) AS sobrenome
FROM accounts;


# Now see if you can do the same thing for every rep name in the sales_reps table. Again provide first and last name columns.

SELECT name, LEFT (name, STRPOS(name,' ')-1) AS nome,
RIGHT(name, LENGTH(name)- STRPOS(name,' ')) as sobre
FROM sales_reps
limit 5

# Each company in the accounts table wants to create an email address for each primary_poc. The email address should be the first name 
of the primary_poc. last name primary_poc @ company name .com.

SELECT CONCAT( LEFT(primary_poc, STRPOS(primary_poc, ' ') -1 ) , '.', RIGHT(primary_poc, LENGTH(primary_poc) - STRPOS(primary_poc, ' ')),
'@', name, '.com' ) AS email
FROM accounts;


# See if you can create an email address that will work by removing all of the spaces in the account name

SELECT CONCAT( LEFT(primary_poc, STRPOS(primary_poc, ' ') -1 ) , '.', RIGHT(primary_poc, LENGTH(primary_poc) - STRPOS(primary_poc, ' ')),
'@', REPLACE(name, ' ', ''), '.com' ) AS email
FROM accounts;


# We would also like to create an initial password, which they will change after their first log in. 
# The first password will be the first letter of the primary_poc's first name (lowercase), then the last letter of their first name 
# (lowercase), the first letter of their last name (lowercase), the last letter of their last name (lowercase), the number of letters 
# in their first name, the number of letters in their last name, and then the name of the company they are working with, all 
# capitalized with no spaces.

WITH t1 AS (
 SELECT LEFT(primary_poc,     STRPOS(primary_poc, ' ') -1 ) first_name,  
 RIGHT(primary_poc, LENGTH(primary_poc) - STRPOS(primary_poc, ' ')) last_name, name
 FROM accounts)
SELECT first_name, last_name, CONCAT(first_name, '.', last_name, '@', name, '.com'), LEFT(LOWER(first_name), 1) || 
RIGHT(LOWER(first_name), 1) || LEFT(LOWER(last_name), 1) || RIGHT(LOWER(last_name), 1) || LENGTH(first_name) || LENGTH(last_name) || 
REPLACE(UPPER(name), ' ', '') AS password
FROM t1;


# Convert date colum in this format (01/31/2014 08:00:00 AM +0000) to SQL correct format
SELECT date, SUBSTR(date,7,4) || '-' || SUBSTR(date,1,2) ||'-'|| SUBSTR(date,4,2) AS ano
FROM sf_crime_data
limit 10

# CONVERT THE NEW STRING INTO DATE TYPE
SELECT date, CAST(SUBSTR(date,7,4) || '-' || SUBSTR(date,1,2) ||'-'|| SUBSTR(date,4,2) AS date) AS data
FROM sf_crime_data
limit 10
